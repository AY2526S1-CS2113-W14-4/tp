@startuml
hide circle
skinparam classAttributeIconSize 0
title Logic Component - Class Diagram

class CommandParser {
    + parseInput(input: String): Command
}

class CommandFactory {
    + createCommand(commandWord: String, args: String): Command
}

class ArgumentParser {
    + {static} parseAddCommandArgs(args: String): AddCommand
    + {static} parseDeleteCommandArgs(args: String): DeleteCommand
    + {static} parseFindCommandArgs(args: String): FindCommand
    + {static} parseUpdateCommandArgs(args: String): UpdateCommand
    + {static} parseListCommandArgs(args: String): ListCommand
    + {static} parseUsernameCommandArgs(args: String): UsernameCommand
}

abstract class Command {
    + {abstract} execute(): void
    + {abstract} isExit(): boolean
}

class AddCommand {
    + execute(): void
    + isExit(): boolean
}
class DeleteCommand
{
    + execute(): void
    + isExit(): boolean
}
class FindCommand
{
    + execute(): void
    + isExit(): boolean
}
class UpdateCommand
{
    + execute(): void
    + isExit(): boolean
}
class ListCommand
{
    + execute(): void
    + isExit(): boolean
}
class UsernameCommand
{
    + execute(): void
    + isExit(): boolean
}
class DashboardCommand
{
    + execute(): void
    + isExit(): boolean
}
class ExitCommand
{
    + execute(): void
    + isExit(): boolean
}
class HelpCommand
{
    + execute(): void
    + isExit(): boolean
}

CommandParser --> CommandFactory : uses >
CommandFactory --> ArgumentParser : delegates parsing >
CommandFactory --> Command : creates >
ArgumentParser --> Command : creates >
Command <|-- AddCommand
Command <|-- DeleteCommand
Command <|-- FindCommand
Command <|-- UpdateCommand
Command <|-- ListCommand
Command <|-- UsernameCommand
Command <|-- DashboardCommand
Command <|-- HelpCommand
Command <|-- ExitCommand

@enduml
